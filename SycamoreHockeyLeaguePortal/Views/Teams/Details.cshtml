@model SycamoreHockeyLeaguePortal.Models.Team
@inject SycamoreHockeyLeaguePortal.Data.ApplicationDbContext _context

@{
    ViewData["Title"] = Model.FullName;

    var teamId = Model.Id;
    int season = ViewBag.Season;
    var schedule = ViewBag.Schedule;
    Standings teamStats = ViewBag.TeamStats;

    string GetDayOfWeek(DateTime date)
    {
        return date.ToString("dddd");
    }

    string GetMonth(DateTime date)
    {
        return date.ToString("MMMM");
    }

    string GetDateString(DateTime date)
    {
        return $"{GetDayOfWeek(date)}, {GetMonth(date)} {date.Day}";
    }

    string GetOpponent(Schedule game)
    {
        if (game.AwayTeamId == teamId)
            return $"@ {game.HomeTeam.FullName}";

        return game.AwayTeam.FullName;
    }

    string GetOpponentLogoPath(Schedule game)
    {
        if (game.AwayTeamId == teamId)
            return game.HomeTeam.LogoPath!;

        return game.AwayTeam.LogoPath!;
    }

    string GetResult(Schedule game)
    {
        if (!game.IsLive && game.Period >= 3)
        {
            if (game.HomeTeamId == teamId)
                return (game.HomeScore > game.AwayScore) ? "W" : "L";
            else
                return (game.AwayScore > game.HomeScore) ? "W" : "L";
        }

        return "";
    }

    string GetResultColor(Schedule game)
    {
        var result = GetResult(game);

        switch (result)
        {
            case "W":
                return "win";

            case "L":
                return "loss";

            default:
                return "text-black";
        }
    }

    string GetScoreString(Schedule game)
    {
        string scoreString = "";

        if (game.IsFinalized && game.Period >= 3)
        {
            scoreString = (game.HomeTeamId == teamId) ?
                $"{game.HomeScore} - {game.AwayScore}" :
                $"{game.AwayScore} - {game.HomeScore}";

            if (game.Period > 3)
            {
                if (game.Period == 4)
                    scoreString += " (OT)";
                else
                {
                    if (game.Type == "Regular Season")
                        scoreString += " (SO)";
                    else
                        scoreString += $" ({game.Period - 3}OT)";
                }
            }
        }

        return scoreString;
    }

    string GetStreakString(int streak)
    {
        streak = Math.Abs(streak);

        if (streak > 0)
            return $"W {streak}";

        if (streak < 0)
            return $"L {streak}";

        return "--";
    }

    string GetGoalDifferentialString(int goalDifferential)
    {
        if (goalDifferential > 0)
            return $"+{goalDifferential}";

        return goalDifferential.ToString();
    }

    string GetRecordFormat(int season, Standings teamStats, string type = "overall")
    {
        if (season < 2024)
        {
            switch (type)
            {
                case "division":
                    return teamStats.RecordVsDivision_2021Format;

                case "conference":
                    return teamStats.RecordVsConference_2021Format;

                case "inter-conference":
                    return teamStats.InterConfRecord_2021Format;

                default:
                    return teamStats.Record_2021Format;
            }
        }
        else
        {
            switch (type)
            {
                case "division":
                    return teamStats.RecordVsDivision_2024Format;

                case "conference":
                    return teamStats.RecordVsConference_2024Format;

                case "inter-conference":
                    return teamStats.InterConfRecord_2024Format;

                default:
                    return teamStats.Record_2024Format;
            }
        }
    }
}

<div class="container">
    <div class="row">
        <div class="col-sm-1">
            <img src="~/@Model.LogoPath" title="@Model.FullName logo" alt="@Model.FullName logo" width="70" height="70" />
        </div>
        <div class="col" style="margin: auto;">
            <h1>@Model.FullName</h1>
        </div>
    </div>
</div>

<hr />
<div style="width: 750px; margin: auto;">
    <h3>@ViewBag.Season @ViewBag.GameType</h3>
    <form asp-action="Details" method="get" style="width: 750px; margin: auto;">
        <div class="container" id="team-schedule-options">
            <div class="row">
                <div class="col">
                    Season:<br />
                    @Html.DropDownList("season", (IEnumerable<SelectListItem>)ViewBag.Seasons, new { onchange = "submit()" })
                </div>
                <div class="col">
                    Type:<br />
                    @Html.DropDownList("gameType", (IEnumerable<SelectListItem>)ViewBag.GameTypes, new { onchange = "submit()" })
                </div>
                <div class="col">
                    Opponent:<br />
                    @Html.DropDownList("opponent", (IEnumerable<SelectListItem>)ViewBag.Opponents, "All Teams", new { onchange = "submit()" })
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <ul class="nav nav-pills nav-justified" id="team-schedule-tabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="schedule-tab" data-bs-toggle="tab" data-bs-target="#schedule" type="button" role="tab" aria-controls="schedule" aria-selected="true">Schedule</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="team-stats-tab" data-bs-toggle="tab" data-bs-target="#team-stats" type="button" role="tab" aria-controls="team-stats" aria-selected="false">Team Stats</button>
                        </li>
                    </ul>
                    <div class="tab-content" id="team-schedule-tab-content">
                        <div class="tab-pane fade show active" id="schedule" role="tabpanel" aria-labelledby="schedule-tab">
                            <table class="table team-schedule">
                                <thead>
                                    <tr>
                                        <th>
                                            Date
                                        </th>
                                        <th colspan="2">
                                            Opponent
                                        </th>
                                        <th colspan="2">
                                            Result
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var game in schedule)
                                    {
                                        var isAwayGame = game.AwayTeamId == teamId ? "away-game" : "";

                                        <tr class="@isAwayGame">
                                            <td>
                                                @GetDateString(game.Date)
                                            </td>
                                            <td class="opponent-name">
                                                @GetOpponent(game)
                                            </td>
                                            <td class="opponent-logo">
                                                <img class="schedule-team-logo" src="~/@GetOpponentLogoPath(game)" />
                                            </td>
                                            <td class="@GetResultColor(game) result">
                                                @GetResult(game)
                                            </td>
                                            <td class="score">
                                                @GetScoreString(game)
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="tab-pane fade" id="team-stats" role="tabpanel" aria-labelledby="team-stats-tab">
                            <div class="container team-stats-grid">
                                <div class="row">
                                    <div class="col container team-stat">
                                        <div class="row">
                                            <div class="col">RECORD</div>
                                            <div class="col stat">@GetRecordFormat(season, teamStats)</div>
                                        </div>
                                    </div>
                                    <div class="col container team-stat">
                                        @if (season < 2024)
                                        {
                                            <div class="row">
                                                <div class="col">POINTS</div>
                                                <div class="col stat">@teamStats.Points</div>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="row">
                                                <div class="col">WIN %</div>
                                                <div class="col stat">@teamStats.WinPct</div>
                                            </div>
                                        }
                                    </div>
                                    <div class="col container team-stat">
                                        <div class="row">
                                            <div class="col">STREAK</div>
                                            <div class="col stat">@GetStreakString(teamStats.Streak)</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col container team-stat">
                                        <div class="row">
                                            <div class="col">GF</div>
                                            <div class="col stat">@teamStats.GoalsFor</div>
                                        </div>
                                    </div>
                                    <div class="col container team-stat">
                                        <div class="row">
                                            <div class="col">GA</div>
                                            <div class="col stat">@teamStats.GoalsAgainst</div>
                                        </div>
                                    </div>
                                    <div class="col container team-stat">
                                        <div class="row">
                                            <div class="col">GD</div>
                                            <div class="col stat">@GetGoalDifferentialString(teamStats.GoalDifferential)</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col container team-stat">
                                        <div class="row">
                                            <div class="col">DIVISION RECORD</div>
                                            <div class="col stat">@GetRecordFormat(season, teamStats, "division")</div>
                                        </div>
                                    </div>
                                    <div class="col container team-stat">
                                        <div class="row">
                                            <div class="col">CONF RECORD</div>
                                            <div class="col stat">@GetRecordFormat(season, teamStats, "conference")</div>
                                        </div>
                                    </div>
                                    <div class="col container team-stat">
                                        <div class="row">
                                            <div class="col">EAST/WEST RECORD</div>
                                            <div class="col stat">@GetRecordFormat(season, teamStats, "inter-conference")</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>