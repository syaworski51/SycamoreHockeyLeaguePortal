@model SycamoreHockeyLeaguePortal.Models.Team
@inject SycamoreHockeyLeaguePortal.Data.ApplicationDbContext _context

@{
    ViewData["Title"] = Model.FullName;

    var teamId = Model.Id;
    var schedule = ViewBag.Schedule;

    string GetDayOfWeek(DateTime date)
    {
        return date.ToString("dddd");
    }

    string GetMonth(DateTime date)
    {
        return date.ToString("MMMM");
    }

    string GetDateString(DateTime date)
    {
        return $"{GetDayOfWeek(date)}, {GetMonth(date)} {date.Day}";
    }

    string GetOpponent(Schedule game)
    {
        if (game.AwayTeamId == teamId)
            return $"@ {game.HomeTeam.FullName}";

        return game.AwayTeam.FullName;
    }

    string GetOpponentLogoPath(Schedule game)
    {
        if (game.AwayTeamId == teamId)
            return game.HomeTeam.LogoPath!;

        return game.AwayTeam.LogoPath!;
    }

    string GetResult(Schedule game)
    {
        if (!game.IsLive && game.Period >= 3)
        {
            if (game.HomeTeamId == teamId)
                return (game.HomeScore > game.AwayScore) ? "W" : "L";
            else
                return (game.AwayScore > game.HomeScore) ? "W" : "L";
        }

        return "";
    }

    string GetResultColor(Schedule game)
    {
        var result = GetResult(game);

        switch (result)
        {
            case "W":
                return "win";

            case "L":
                return "loss";

            default:
                return "text-black";
        }
    }

    string GetScoreString(Schedule game)
    {
        string scoreString = "";

        if (!game.IsLive && game.Period >= 3)
        {
            scoreString = (game.HomeTeamId == teamId) ?
                $"{game.HomeScore} - {game.AwayScore}" :
                $"{game.AwayScore} - {game.HomeScore}";

            if (game.Period > 3)
            {
                if (game.Period == 4)
                    scoreString += " (OT)";
                else
                {
                    if (game.Type == "Regular Season")
                        scoreString += " (SO)";
                    else
                        scoreString += $" ({game.Period - 3}OT)";
                }
            }
        }

        return scoreString;
    }
}

<div class="container">
    <div class="row">
        <div class="col-sm-1">
            <img src="~/@Model.LogoPath" title="@Model.FullName logo" alt="@Model.FullName logo" width="70" height="70" />
        </div>
        <div class="col" style="margin: auto;">
            <h1>@Model.FullName</h1>
        </div>
    </div>
</div>

<hr />
<div style="width: 750px; margin: auto;">
    <h3>@ViewBag.Season @ViewBag.GameType</h3>
    <form asp-action="Details" method="get" style="width: 750px; margin: auto;">
        <div class="container" id="team-schedule-options">
            <div class="row">
                <div class="col">
                    Season:<br />
                    @Html.DropDownList("season", (IEnumerable<SelectListItem>)ViewBag.Seasons, new { onchange = "submit()" })
                </div>
                <div class="col">
                    Type:<br />
                    @Html.DropDownList("gameType", (IEnumerable<SelectListItem>)ViewBag.GameTypes, new { onchange = "submit()" })
                </div>
                <div class="col">
                    Opponent:<br />
                    @Html.DropDownList("opponent", (IEnumerable<SelectListItem>)ViewBag.Opponents, "All Teams", new { onchange = "submit()" })
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <ul class="nav nav-pills nav-justified" id="team-schedule-tabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="list-tab" data-bs-toggle="tab" data-bs-target="#list" type="button" role="tab" aria-controls="list" aria-selected="true">List</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="calendar-tab" data-bs-toggle="tab" data-bs-target="#calendar" type="button" role="tab" aria-controls="calendar" aria-selected="false">Calendar</button>
                        </li>
                    </ul>
                    <div class="tab-content" id="team-schedule-tab-content">
                        <div class="tab-pane fade show active" id="list" role="tabpanel" aria-labelledby="list-tab">
                            <table class="table team-schedule">
                                <thead>
                                    <tr>
                                        <th>
                                            Date
                                        </th>
                                        <th colspan="2">
                                            Opponent
                                        </th>
                                        <th colspan="2">
                                            Result
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var game in schedule)
                                    {
                                        var isAwayGame = game.AwayTeamId == teamId ? "away-game" : "";

                                        <tr class="@isAwayGame">
                                            <td>
                                                @GetDateString(game.Date)
                                            </td>
                                            <td class="opponent-name">
                                                @GetOpponent(game)
                                            </td>
                                            <td class="opponent-logo">
                                                <img class="schedule-team-logo" src="~/@GetOpponentLogoPath(game)" />
                                            </td>
                                            <td class="@GetResultColor(game) result">
                                                @GetResult(game)
                                            </td>
                                            <td class="score">
                                                @GetScoreString(game)
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="tab-pane fade" id="calendar" role="tabpanel" aria-labelledby="calendar-tab">
                            <div class="container">
                                <div class="row">
                                    <div class="col">Sunday</div>
                                    <div class="col">Monday</div>
                                    <div class="col">Tuesday</div>
                                    <div class="col">Wednesday</div>
                                    <div class="col">Thursday</div>
                                    <div class="col">Friday</div>
                                    <div class="col">Saturday</div>
                                </div>
                                <div class="row">

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>